services:
  # Начало секции с сервисами
  db:
    # Определение сервиса базы данных
    container_name: postgres # Имя контейнера для базы данных
    image: postgres:15.2 # Используемый образ PostgreSQL
    restart: always # Перезапускать контейнер всегда в случае сбоя
    environment:
      # Переменные окружения для настройки базы данных
      - POSTGRES_USER=${POSTGRES_USER} # Пользователь базы данных
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD} # Пароль пользователя базы данных
      - POSTGRES_DB=${POSTGRES_DB} # Имя базы данных
    ports:
      # Настройка портов
      - ${POSTGRES_PORT}:5432 # Проброс порта 5432 контейнера на порт 5433 хоста
    volumes:
      # Настройка томов для хранения данных
      - postgres_data:/var/lib/postgresql/data # Хранение данных PostgreSQL в томе postgres_data
    networks:
      # Настройка сетей
      - backend # Подключение к сети backend
  minio:
    container_name: minio
    image: minio/minio
    restart: always
    ports:
      - 9000:9000
      - 9001:9001
    command: minio server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      # Настройка сетей
      - backend # Подключение к сети backend
  createbuckets:
    container_name: minio-bucket
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_USER};
      /usr/bin/mc mb myminio/${S3_IMAGES_BUCKET};
      /usr/bin/mc anonymous set public myminio/${S3_IMAGES_BUCKET};
      exit 0;
      "

    networks:
      # Настройка сетей
      - backend # Подключение к сети backend

volumes:
  # Определение томов
  postgres_data:
  minio-data:

networks:
  backend: