services:
  # Начало секции с сервисами
  db:
    # Определение сервиса базы данных
    container_name: postgres # Имя контейнера для базы данных
    image: postgres:15.2 # Используемый образ PostgreSQL
    restart: always # Перезапускать контейнер всегда в случае сбоя
    environment:
      # Переменные окружения для настройки базы данных
      - POSTGRES_USER=${POSTGRES_USER} # Пользователь базы данных
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD} # Пароль пользователя базы данных
      - POSTGRES_DB=${POSTGRES_DB} # Имя базы данных
    ports:
      # Настройка портов
      - ${POSTGRES_PORT}:5432 # Проброс порта 5432 контейнера на порт 5433 хоста
    volumes:
      # Настройка томов для хранения данных
      - postgres_data:/var/lib/postgresql/data # Хранение данных PostgreSQL в томе postgres_data
    networks:
      # Настройка сетей
      - backend # Подключение к сети backend
  g4f:
    image: hlohaus789/g4f:latest-slim
    restart: always
    container_name: g4f_service
    ports:
      - "1337:1337" # Пробрасываем порт 1337
    volumes:
      - ./har_and_cookies:/app/har_and_cookies # Монтируем директорию har_and_cookies
      - ./generated_images:/app/generated_images # Монтируем директорию generated_images
    command: >
      sh -c "
      rm -r -f /app/g4f/ &&
      pip install -U g4f[slim] &&
      python -m g4f --debug
    networks:
      # Настройка сетей
      - backend # Подключение к сети backend  "

volumes:
  # Определение томов
  postgres_data:

networks:
  backend: